<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
	   http://www.springframework.org/schema/mvc/spring-mvc.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd
	   http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">
 
 	<!--Spring security enabled annotations-->
    <security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled" jsr250-annotations="enabled"/>
 
    <!-- context:component-scan This tag will scan @Component, @Repository, @Service, @Controller
         and also resolves @Autowired and @Qualifier -->
    <context:component-scan base-package="ru.javastudy.mvcHtml5Angular.mvc" />
 
    <!--
        mvc:annotation-driven configures Spring MVC annotations
        Support for validating @Controller inputs with @Valid, if a JSR-303 Provider is present on the classpath.
        HttpMessageConverter support for @RequestBody method parameters and @ResponseBody method return values
        from @RequestMapping or @ExceptionHandler methods.
     -->
    <mvc:annotation-driven>
        <!--use int RestController to produce pretty json response-->
        <mvc:message-converters>
            <bean id="jacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="prettyPrint" value="true" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
 
    <!-- activate @Transactional JPA annotation -->
    <tx:annotation-driven/>
 
    <!-- ViewResolver bean config for mapping strings to jsp views -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
        <property name="order" value="1" />
        <property name="prefix" value="/WEB-INF/view/" />
        <property name="suffix" value=".jsp" />
    </bean>
 
    <!-- File Upload bean config-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- set the maximum file size in bytes -->
        <property name="maxUploadSize" value="1000000"/>
    </bean>
 
    <!--Excel and PDF xml view configuration -->
    <!--disabling for jUnit test. -->
    <bean class="org.springframework.web.servlet.view.XmlViewResolver">
        <property name="order" value="0" />
        <property name="location" value="/WEB-INF/config/excel-pdf-config.xml"/>
    </bean>
 
    <mvc:view-controller view-name="/index" path="/"/> 
    <mvc:view-controller view-name="/index" path="/index.html"/> 
    <mvc:view-controller view-name="/form/login" path="/login.html"/> 
    <mvc:view-controller view-name="/about/about" path="/about.html"/> 
    <mvc:view-controller view-name="/file/file" path="/file.html"/> 
    <mvc:view-controller view-name="/jdbc/jdbc" path="/jdbc.html"/> 
    <mvc:view-controller view-name="/email/email" path="/email.html"/>
    <mvc:view-controller view-name="/rest/rest" path="/rest.html"/> 
    <mvc:view-controller view-name="/orm/orm" path="/orm.html"/> 
    <mvc:view-controller view-name="/jstl/jstl" path="/jstl.html"/> 
    <mvc:view-controller view-name="/scope/scope" path="/scope.html"/> 
    <mvc:view-controller view-name="/cookie/cookieView" path="/cookie.html"/> 
    <mvc:view-controller view-name="/security/security" path="/security.html"/> 
    <mvc:view-controller view-name="/security/admin" path="/security/admin.html"/>
 
 
    <!-- Static Resources Configuration (get access to static sources such as CSS and JavaScript files) -->
    <mvc:resources mapping="/resources/**" location="/resources/" />
    <!-- themes can be put in different folder such as
        <mvc:resources mapping="/resources/**" location="/resources/themeBlue" />
        <mvc:resources mapping="/resources/**" location="/resources/themeGreen" />
     -->
     
     <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/interceptorCall/*"/>
            <!--need to use ' /** ' not ' /* ' if you want to intercept all requests.-->
            <!--<mvc:mapping path="/**"/>-->
            <bean class="ru.javastudy.mvcHtml5Angular.mvc.interceptors.SiteInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
 
</beans>